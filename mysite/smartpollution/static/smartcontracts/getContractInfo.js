//This script return the contracts event data
//arg2: is the contract abi
//arg3: is the contracts address
var web3 = require('web3');

web3 = new web3(new web3.providers.HttpProvider("http://localhost:8545"));
//web3.eth.defaultAccount = web3.eth.coinbase;
var abi_in = String(process.argv[2]).replace(/@StringDelimiter@/g, '"');

//var abi =
//  '[ { "constant": false, "inputs": [ { "name": "_value", "type": "int32" } ], "name": "changeLowerTrigger", "outputs": [], "payable": false, "type": "function" }, { "constant": true, "inputs": [], "name": "metric", "outputs": [ { "name": "name", "type": "string", "value": "place_holder_metric_name_to_be_autogenerated" }, { "name": "value", "type": "int32", "value": "666" } ], "payable": false, "type": "function" }, { "constant": false, "inputs": [ { "name": "_value", "type": "int32" } ], "name": "changeUpperTrigger", "outputs": [], "payable": false, "type": "function" }, { "constant": false, "inputs": [ { "name": "_value", "type": "int32" } ], "name": "update", "outputs": [], "payable": false, "type": "function" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "_value", "type": "int32" } ], "name": "ValueChanged", "type": "event" }, { "anonymous": false, "inputs": [ { "indexed": false, "name": "_alarm", "type": "string" }, { "indexed": false, "name": "_value", "type": "int32" } ], "name": "Alarm", "type": "event" } ]';
var abi = JSON.parse(abi_in);
var contAbi = web3.eth.contract(abi);
var cont = contAbi.at(String(process.argv[3]));

var evsFil = cont.ValueChanged({}, {
  fromBlock: 900000,
  toBlock: 'latest'
});
evsFil.get(function(error, result) {
  console.log(JSON.stringify(result));
});
